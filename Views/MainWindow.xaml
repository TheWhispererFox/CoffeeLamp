<fluentWpf:AcrylicWindow
    x:Class="CoffeeLamp.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fluentWpf="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
    xmlns:glob="clr-namespace:System.Globalization;assembly=System.Globalization"
    xmlns:local="clr-namespace:CoffeeLamp"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:CoffeeLamp.Models"
    Title="LampyCoffee"
    Width="800"
    Height="450"
    MinWidth="800"
    MinHeight="450"
    fluentWpf:PointerTracker.Enabled="True"
    FallbackColor="Chocolate"
    Icon="/Glowing-Yellow-Light-Bulb-PNG-image-1024x768.png"
    Loaded="Window_Loaded"
    NoiseOpacity="0.0001"
    TintColor="DarkOrange"
    mc:Ignorable="d">
    <fluentWpf:AcrylicWindow.Resources>
        <Style x:Key="NoHighLightStyle" TargetType="{x:Type ListBoxItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
            </Style.Resources>
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <!--<Setter Property="IsSelected" Value="{Binding Content.IsSelected, Mode=TwoWay, RelativeSource={RelativeSource Self}}" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border
                            Name="Bd"
                            Padding="{TemplateBinding Control.Padding}"
                            Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                Content="{TemplateBinding ContentControl.Content}"
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background" Value="Transparent" />
                                <Setter TargetName="Bd" Property="Border.BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush>Transparent</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background" Value="Transparent" />
                                <Setter TargetName="Bd" Property="Border.BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush>Transparent</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Panel.Background" Value="Transparent" />
                                <Setter TargetName="Bd" Property="Border.BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush>Transparent</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Bd" Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </fluentWpf:AcrylicWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="53*" />
            <RowDefinition Height="381*" />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="21*" />
                <ColumnDefinition Width="79*" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Margin="0,12,0,12"
                FontFamily="Raleway"
                FontSize="24"
                Text="LampyCoffee"
                TextAlignment="Center" />
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <Button
                    Width="120"
                    BorderBrush="{StaticResource SelectedColor}"
                    Click="NavigateTo"
                    Content="Кофе"
                    Foreground="{StaticResource SelectedColor}"
                    Style="{StaticResource NavbarBtn}"
                    Tag="Coffee" />
                <Button
                    Width="120"
                    BorderBrush="Transparent"
                    Click="NavigateTo"
                    Content="Войти"
                    Style="{StaticResource NavbarBtn}"
                    Tag="Auth" />
                <Button
                    x:Name="CartBtn"
                    Width="120"
                    BorderBrush="Transparent"
                    Click="ToggleCart"
                    Content="Корзина"
                    Style="{StaticResource NavbarBtn}" />
            </StackPanel>
            <Popup
                x:Name="CartPopup"
                MinWidth="100"
                MinHeight="100"
                d:DataContext="{d:DesignData CartViewModel}"
                fluentWpf:PointerTracker.Enabled="True"
                AllowsTransparency="True"
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=CartBtn}"
                PopupAnimation="Scroll"
                StaysOpen="True">
                <StackPanel Background="Coral" Orientation="Vertical">
                    <ScrollViewer MaxHeight="200" CanContentScroll="True">
                        <ListBox
                            AllowDrop="True"
                            Background="Transparent"
                            Drop="OnCartDrop"
                            ItemContainerStyle="{StaticResource NoHighLightStyle}"
                            ItemsSource="{Binding Coffees}">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="models:Coffee">
                                    <ListBoxItem>
                                        <local:Card
                                            Title="{Binding Name}"
                                            Description="{Binding Description}"
                                            Price="{Binding Price}" />
                                    </ListBoxItem>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ScrollViewer>
                    <StackPanel Margin="10" Orientation="Horizontal">
                        <TextBlock FontSize="18" Text="Итого: " />
                        <TextBlock
                            x:Name="TotalBlock"
                            FontSize="18"
                            Text="{Binding Total}" />
                        <TextBlock FontSize="18" Text="{Binding Source={x:Static glob:CultureInfo.CurrentCulture}, Path=NumberFormat.CurrencySymbol}" />
                    </StackPanel>
                    <Button
                        Margin="10"
                        Background="Transparent"
                        Content="Заказать"
                        FontSize="18"
                        Style="{StaticResource ButtonRoundRevealStyle}" />
                </StackPanel>
            </Popup>
        </Grid>
        <Frame
            x:Name="MainFrame"
            Grid.Row="1"
            Margin="0,1,0,0"
            Content=""
            NavigationUIVisibility="Hidden" />
    </Grid>
</fluentWpf:AcrylicWindow>
